* Findings
http://www.gabriel.urdhr.fr/tags/simgrid/
* Journal
** Week 2 feb 2015
*** Things done
 - added some cross-process MCer/MCed communications (socket based)
 - fixed MCer/MCed synchronisation issues
*** Questions
 - MC_automaton_new_propositional_symbol This should probably be
   handled in the MCer but this function exposes a callback function
   for evaluating a symbol. What should we do about this? Kindly ask
   the MCed to execute the function(s) for us?
*** Work Planed [1/4]
**** DONE proper handling of the message on the server side
 - Some message handling is currently stubbed in the MCer.
**** TODO add missing cross-process MCer/MCed communication
 - ask the MCed to continue its execution
 - inform the MCer that a decision point has been reached
**** TODO start moving some MC algorithms to the MCer process
 - Once the basic communication between the MCer/MCed is in place, we
   can move specific MC algorithms (safety, liveness, comm
   determinism) on the server side.
**** TODO separate source code used by the MCer and the MCed in different files/folders
 - Separing the code in two distinct libraries will ensure that we do
   not access symbols/variables in the wrong process.
** Week 9 feb 2015
*** Things done
 - More cross process MCer/MCer communications
 - MCer-side symbol evaluations (for Promela formulas) implemented as
   variables in the MCed. The more general case where the promula
   formula is implemented as a client-side callback is not implemented
   yet: we would have to trigger the function evaluation from the
   MCer.
 - Partial separation of the MCed API vs MCer API
 - Make the file descriptor snapshoting/restoration logic optional and
   disabled by default: this is often not necessary in our examples
   and it is not implemented (yet) in the split-process mode. The
   split-process implementation needs to be implemented on the MCed
   side with some form on MCer/MCed communication.
 - Merge commits from master
*** Questions
 - The "easy", long, generic part has been done. What remains is:
   - the algorithm-specific parts (liveness, safety, comm. determinism);
   - some support code which relies eavily on the SIMIX data
     structures;
   the remaining boring part is to find a generic, simple, readable,
   lightweight way to tap into the SIMIX data structures from the
   MCer.
*** Work Planed
Same as before and.
** Week 23 feb 2015
*** Things done
- Remote access to smx_process, simcalls, host names (cached).
- Integration of this modification in in many places.
- (wip) Move the safety algorithm in the MCer process
*** Questions
- Currently all thos remote access are implemented by reading in the
  MCed process. Might be cleaner to have the MCed process signal the
  MCer process of the changes (use message passing instead of reading
  in the MCed process).
*** Work Planed [2/4]
**** DONE Remote access to proces name
**** DONE Remote access to synchro
**** TODO Finish integration of those modification in all the code
**** TODO Move the safety algorithm in the MCer process
** Week 2 march 2015
*** Things done
- Fix bugs from previous weeks. The new code was not completely active
  so I found out some bugs. Rewrote the commits in order to have a
  clean history. There is still some work to be done around this.
*** Questions
- s_mc_comm_pattern use the host *name* as src_host/dst_host. It might
  be better (more efficient) to use some sort of host identifier
  instead. AFAIK, we don't really have a host identifier. We can
  either use the host name of the address of the host process.
*** Work Planed [1/1]
**** DONE Remote access to host name
** Week 9 march 2015
*** Things done
- Utility functions to read MCed dynar
- Remote access to SIMIX structures
  - simcall_comm_wait__get__comm(r)
  - simcall_comm_test__get__comm(r)
  - simcall_comm_waitany__get__comms(r)
  - simcall_comm_testany__get__comms(r)
  - ...
- Complete remote memory access in mc_state.c
*** Questions
*** Work Planed
**** TOTO Remote memory access in mc_request.c
* Letter to the Next Guy
* Abbreviations
 - MC: model-checking, model-check
 - MCer: model-checker
 - MCed: model-checked application
